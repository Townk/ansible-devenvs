# MIT License
#
# Copyright (c) 2019 Thiago Alves
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
---
- name: "Check if {{ env.name }} is present in the $PATH"
  block:
    - name: Check if {{ env.name }} binary can be executed
      shell: command -v {{ env.name | lower }} 2>/dev/null
      register: check_result
      ignore_errors: yes
      changed_when: False

    - name: "Cache {{ env.name }} presence system-wide"
      set_fact:
        _env: "{{ _env | combine(new_value, recursive=true) }}"
      vars:
        new_value:
          installed: "{{ check_result.rc == 0 }}"
          cmd: "{{ check_result.stdout }}"

- name: "Was {{ env.name }} previously installed on user dir but not included on $PATH"
  block:
    - name: "Check if {{ env.name }} is installed on the user home folder"
      stat:
        path: "{{ env.install.path }}/bin/{{ env.name | lower }}"
      register: find_result

    - name: "Cache {{ env.name }} presence on user's home"
      set_fact:
        _env: "{{ _env | combine(new_value, recursive=true) }}"
      vars:
        new_value:
          installed: "{{ find_result.stat.exists }}"
          cmd: "{{ env.install.path }}/bin/{{ env.name | lower }}"
  when: check_result.rc != 0